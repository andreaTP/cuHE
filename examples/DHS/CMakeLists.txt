CMAKE_MINIMUM_REQUIRED(VERSION 3.2)
PROJECT(dhs)

SET(GPU_ARCH "50" CACHE STRING "Cuda architecture number, one of ('20', '30', '32', '35', '37', '50', '52', '53')")
SET(GCC_CUDA_VERISON "4.9" CACHE STRING "GCC compiler to be used with cuda")

SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/../../cuhe/cmake)

FIND_PACKAGE(NTL REQUIRED)
FIND_PACKAGE(OpenMP REQUIRED)
FIND_PACKAGE(CUDA REQUIRED)

INCLUDE(FindCUDA)

FILE(GLOB SOURCES "*.cu" "*.h")

LIST(APPEND CMAKE_CXX_FLAGS "-m64 -std=c++11 -O3 -ffast-math -Wall")

LIST(APPEND CUDA_NVCC_FLAGS "-ccbin gcc-${GCC_CUDA_VERISON} -std=c++11 -gencode arch=compute_${GPU_ARCH},code=sm_${GPU_ARCH}")

SET(LIB_NAME "dhs")

CUDA_BUILD_CLEAN_TARGET()

CUDA_ADD_LIBRARY( dhs
       DHS.cu
	   SHARED
)

TARGET_INCLUDE_DIRECTORIES(dhs PUBLIC)

TARGET_LINK_LIBRARIES(dhs ${CMAKE_SOURCE_DIR}/libcuHE.so ${NTL_LIB} ${M_LIB} ${GMP_LIB} ${GOMP_LIB})

CUDA_ADD_EXECUTABLE(simpleDHS
	simple_DHS.cu
	DHS.cu
)

TARGET_INCLUDE_DIRECTORIES(simpleDHS PUBLIC /../../cuhe)

TARGET_LINK_LIBRARIES(simpleDHS ${CMAKE_SOURCE_DIR}/libcuHE.so ${NTL_LIB} ${M_LIB} ${GMP_LIB} ${GOMP_LIB})
